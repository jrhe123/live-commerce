<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>org.example</groupId>
        <artifactId>live-app</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    
    <artifactId>live-user-provider</artifactId>
    
    <version>1.0.2</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>        
        <maven.compiler.compilerVersion>17</maven.compiler.compilerVersion>
        
        
        
        <curator.version>2.12.0</curator.version>
        <mybatis-plus.version>3.5.3</mybatis-plus.version>
        <druid.version>1.1.20</druid.version>
        <sharding.jdbc.version>5.3.2</sharding.jdbc.version>
        <hessian.version>4.0.38</hessian.version>
        <jetty.version>9.4.28.v20200408</jetty.version>
        <dubbo.version>3.2.0-beta.3</dubbo.version>
        <spring-cloud-alibaba.version>2022.0.0.0-RC1</spring-cloud-alibaba.version>
        <rocketmq.client.version>4.8.0</rocketmq.client.version>
    </properties>

    <dependencies>
       <dependency>
            <groupId>org.apache.dubbo</groupId>
            <artifactId>dubbo-spring-boot-starter</artifactId>
            <version>${dubbo.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        
        
        <!-- load config yaml from nacos -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
            <version>3.0.2</version>
        </dependency>
        <!-- EOF load config yaml from nacos -->
        
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>log4j-to-slf4j</artifactId>
                    <groupId>org.apache.logging.log4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${live-mysql.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.shardingsphere</groupId>
            <artifactId>shardingsphere-jdbc-core</artifactId>
            <version>${sharding.jdbc.version}</version>
        </dependency>

        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatis-plus.version}</version>
        </dependency>

        <dependency>
            <groupId>org.example</groupId>
            <artifactId>live-user-interface</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        
        <dependency>
            <groupId>org.example</groupId>
            <artifactId>live-common-interface</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        
        <dependency>
            <groupId>org.example</groupId>
            <artifactId>live-framework-datasource-starter</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        
        <dependency>
            <groupId>org.example</groupId>
            <artifactId>live-framework-redis-starter</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.apache.rocketmq</groupId>
            <artifactId>rocketmq-client</artifactId>
            <version>${rocketmq.client.version}</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>1.1.1</version>
        </dependency>
        
        <dependency>
            <groupId>org.example</groupId>
            <artifactId>live-id-generate-interface</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
		<finalName>live-user-provider-docker</finalName>
                
        <plugins>
			
			<!-- SpringBoot app to jar-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId> 
            </plugin>
            
			<plugin>
	            <groupId>io.fabric8</groupId>
	            <artifactId>docker-maven-plugin</artifactId>
	            <version>0.38.1</version>
	            <executions>
	                <execution>
	                    <id>build</id>
	                    <phase>install</phase>
	                    <goals>
	                        <goal>build</goal>
	                    </goals>
	                </execution>
	            </executions>
	            <configuration>
					<!-- <dockerHost>${docker.host}</dockerHost> -->
					<dockerHost>tcp://127.0.0.1:2376</dockerHost>
					<verbose>true</verbose>
					<pushRegistry>true</pushRegistry>
					
					<authConfig>
			            <username>{docker.username}</username>
			            <password>{docker.password}</password>
			        </authConfig>
			        
			        <images>
						<image>
							<registry>registry.hub.docker.com</registry>
							<name>${project.build.finalName}</name>
							<build>
								<dockerFileDir>${project.basedir}/docker/</dockerFileDir>
								<tags>
									<tag>${project.version}</tag>
								</tags>
								<noCache>true</noCache>
							</build>
							
					
						</image>
					</images>
					
					
					<buildArgs>
						<JAR_FILE>
							${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
				</configuration>
	        </plugin>

            
            
        </plugins>
    </build>
</project>